name: Java CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ] #12

jobs:
  test:
    name: Build & Test (Staging)
    runs-on: ubuntu-latest
    environment: staging
    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      # set in Settings > Secrets and variables > Actions > New repository secret
      # modify application.yml

    services:
      postgres:
        image: postgres:14.17
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # test database

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
            
      - name: Build and run tests
        run: mvn clean verify -Dspring.profiles.active=test
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

#      - name: Run Flyway migrations
#        run: |
#          curl -L https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/9.10.0/flyway-commandline-9.10.0-linux-x64.tar.gz | tar xvz
#          sudo ln -s $(pwd)/flyway-9.10.0/flyway /usr/local/bin/flyway
#          flyway -locations=filesystem:src/main/resources/db/migration -url=jdbc:postgresql://localhost:5432/testdb \
#                 -user=testuser \
#                 -password=testpass migrate
#
#      - name: Validate DB schema (employee table)
#        run: |
#          echo "Checking if table 'employee' exists..."
#          TABLE_COUNT=$(psql -h localhost -U testuser -d testdb -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema='public' AND table_name='Employee';")
#          if [ $(echo $TABLE_COUNT | tr -d ' ') -eq 0 ]; then
#            echo "Table 'Employee' does NOT exist. Migration failed."
#            exit 1
#          else
#            echo "Table 'Employee' exists. Migration successful."
#          fi
#        env:
#          PGPASSWORD: testpass
#      ?
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && needs.test.result == 'success'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build package (skip tests)
        run: mvn clean package -DskipTests

      - name: Set up SSH key
        run: |
          printf "%s" "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Upload JAR to server
        run: |
          scp -i private_key.pem \
            -o StrictHostKeyChecking=no \
            target/*.jar \
            azureuser@4.227.176.4:/home/azureuser/app.jar

      - name: SSH and restart app
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no azureuser@4.227.176.4 <<EOF
            set -eux
            pkill -f 'java -jar /home/azureuser/app.jar' || true

            export SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            export SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            export SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}

            nohup java -jar /home/azureuser/app.jar --server.port=8081 \
              > /home/azureuser/app.log 2>&1 &
          EOF


#      - name: Build and run tests
#        run: mvn clean verify
#
#      - name: Deploy to production
#        if: github.ref == 'refs/heads/main' && success()
#        run: |
#          echo "Deploying..."
#
#      - name: Set up SSH key
#        run: |
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
#          chmod 600 private_key.pem
#
#      - name: Upload JAR to server
#        if: github.ref == 'refs/heads/main' && success()
#        run: |
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
#          chmod 600 private_key.pem
#          scp -i private_key.pem -o StrictHostKeyChecking=no target/*.jar azureuser@172.191.111.81:/home/azureuser/app.jar
#
#      - name: SSH and restart app
#        if: github.ref == 'refs/heads/main' && success()
#        env:
#          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
#          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
#          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
#        run: |
#          ssh -i private_key.pem -o StrictHostKeyChecking=no azureuser@172.191.111.81 << EOF
#            echo "Killing old app process (if running)..."
#            pkill -f 'java -jar /home/azureuser/app.jar' || true
#
#            echo "Starting new app with injected env vars..."
#            SPRING_DATASOURCE_URL="${SPRING_DATASOURCE_URL}" \
#            SPRING_DATASOURCE_USERNAME="${SPRING_DATASOURCE_USERNAME}" \
#            SPRING_DATASOURCE_PASSWORD="${SPRING_DATASOURCE_PASSWORD}" \
#            nohup java -jar /home/azureuser/app.jar > app.log 2>&1 &
#
#            echo "App deployed and started with environment variables."
#          EOF
#